Всем доброго дня!
Непонятка с работой JPA (SpringBoot + JPA + MySql + Rest)

Есть сущность условного типа "каталог (под-)категорий"--
 с @ManyToOne  и @OneToMany полями -- стандартная схема - сущность с собственой дочкой.

Условная схема алгоритма:
1) Очистить таблицу
2) Создать корневой объект
3) Добавить дочерние объекты
4) Получить корневой объект (с чилдренЛистом)

 Вроде бы все работает - то есть извлекается сущность с вложенными чилдренЛистами..
 Но трабл в том, что таблицу нужно очищать Перед помещением в нее очередной порции данных для обработки.
 И вот тут возникает основной головняк:
 таблица в базе очищается, данные записываются, извекаются,
 НО НЕ отрабатывается запрос по чилдренЛисту -
  объекты из базы выходят поштучно (видно по логу запроса).
 Причем если отключить очистку таблицы (или нативным трункейтом или deleteAll),
 и Делать серию запросов на ендпойнт, то все работает как надо -
 выходит объект с многоуровневым чилдренЛистом.

Что это может быть, куда можно сунуть дебаггер, и как это лечить?





==============----- ENTITY -----=================
package ****----*****;



@Entity
@Data
@EqualsAndHashCode(of = {"id", "name"})
@Table(name = "aa_catrange")
public class CatRangedDto {
	@Id
	@Column(name = "id")
	private Long id;

	private String name;

	private Long parId;

	@ManyToOne()
//	@JsonIgnore
	@JsonBackReference
	@JoinColumn(name = "parent_id")
	private CatRangedDto parent;

	@OneToMany(mappedBy = "parent")
	private List<CatRangedDto> children = new ArrayList<>();
}

==========GENERATED TABLE (converted to JSON)======
[
  {
    "id": 30,
    "name": "Root",
    "parent_id": null,
    "par_id": 0
  },
  {
    "id": 1143,
    "name": "Развивающие игры",
    "parent_id": 1144,
    "par_id": 1144
  },
  {
    "id": 1144,
    "name": "РАЗВИТИЕ И ТВОРЧЕСТВО",
    "parent_id": 30,
    "par_id": 30
  },
  {
    "id": 1565,
    "name": "Конструкторы",
    "parent_id": 1143,
    "par_id": 1143
  },
  {
    "id": 1944,
    "name": "Магнитные конструкторы",
    "parent_id": 1565,
    "par_id": 1565
  }
]

=========------- FRAGMENT .toString()---=========
CatTemp{id=1944, parId=1565, name='Магнитные конструкторы', children=[]}

==========-------- FROM POSTMAN (с игнором parent) ( repo.findAll() ) -=============

[
    {
        "id": 30,
        "parId": 0,
        "name": "Root",
        "children": []
    },
    {
        "id": 1143,
        "parId": 1144,
        "name": "Развивающие игры",
        "children": []
    },
    {
        "id": 1144,
        "parId": 30,
        "name": "РАЗВИТИЕ И ТВОРЧЕСТВО",
        "children": []
    }
]

========------POSTMAN 2-----=======
 C отключенным  @JsonIgnore у 	"private CatTemp parent";

 [
 {
        "id": 1565,
        "parId": 1143,
        "name": "Конструкторы",
        "parent": {
            "id": 1143,
            "parId": 1144,
            "name": "Развивающие игры",
            "parent": {
                "id": 1144,
                "parId": 30,
                "name": "РАЗВИТИЕ И ТВОРЧЕСТВО",
                "parent": {
                    "id": 30,
                    "parId": 0,
                    "name": "Root",
                    "parent": null,
                    "children": []
                },
                "children": []
            },
            "children": []
        },
        "children": []
    }
]
